@model Gestión_de_Inventario_Huevos_del_Campo.Models.Venta

@{
    ViewData["Title"] = "Registrar Venta";
    var productos = ViewBag.Productos as List<Gestión_de_Inventario_Huevos_del_Campo.Models.Productos>;
}

<div class="container d-flex justify-content-center align-items-center min-vh-100">
    <div class="product-form-card-modern shadow-sm border-0 w-100" style="max-width: 480px;">
        <div class="card-body p-4 p-md-5">
            <div class="text-center mb-4">
                <div class="product-avatar-modern mx-auto mb-3">
                    <i class="fas fa-cash-register text-white"></i>
                </div>
                <h2 class="fw-semibold mb-2 modern-title">Registrar Venta</h2>
                <p class="text-secondary mb-0 small">Completa los datos para registrar una nueva venta</p>
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <div><i class="fas fa-exclamation-triangle me-2"></i>@error.ErrorMessage</div>
                    }
                </div>
            }

            <form asp-action="Create" method="post" autocomplete="off" id="ventaForm">
                <div class="form-group mb-3">
                    <label asp-for="Cliente" class="form-label fw-semibold modern-label">
                        <i class="fas fa-user me-2 text-muted"></i>Cliente
                    </label>
                    <input asp-for="Cliente" class="form-control modern-input" placeholder="Nombre del cliente" />
                    <span asp-validation-for="Cliente" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold modern-label">
                        <i class="fas fa-boxes-stacked me-2 text-muted"></i>Seleccionar productos
                    </label>
                    @if (productos != null && productos.Any())
                    {
                        @for (int i = 0; i < productos.Count; i++)
                        {
                            <div class="row align-items-center mb-2">
                                <div class="col-auto">
                                    <input type="checkbox" class="form-check-input producto-checkbox" name="productoIds" value="@productos[i].Id" id="producto_@i" />
                                </div>
                                <div class="col">
                                    <label class="form-check-label" for="producto_@i">
                                        @productos[i].Nombre <span class="text-muted small">(@productos[i].Cantidad disponibles)</span>
                                    </label>
                                </div>
                                <div class="col-auto" style="min-width:120px;">
                                    <div class="position-relative" style="min-width: 90px;">
                                        <input type="number"
                                               name="cantidades"
                                               class="form-control modern-input cantidad-input"
                                               min="1"
                                               max="@productos[i].Cantidad"
                                               data-stock="@productos[i].Cantidad"
                                               placeholder="Cantidad"
                                               style="max-width: 90px;"
                                               disabled />
                                        <span class="invalid-feedback cantidad-feedback small"></span>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-warning small">No hay productos disponibles para registrar una venta.</div>
                    }
                </div>

                <div class="d-flex gap-2 mt-4">
                    <button type="submit" class="btn btn-modern-primary btn-sm flex-fill d-flex align-items-center justify-content-center gap-2">
                        <i class="fas fa-save"></i> Registrar Venta
                    </button>
                    <a asp-action="Index" class="btn btn-modern-outline btn-sm flex-fill d-flex align-items-center justify-content-center gap-2">
                        <i class="fas fa-arrow-left"></i> Cancelar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Habilitar/deshabilitar input de cantidad según el checkbox
        document.querySelectorAll('.producto-checkbox').forEach(function (checkbox) {
            const row = checkbox.closest('.row');
            const cantidadInput = row.querySelector('.cantidad-input');
            checkbox.addEventListener('change', function () {
                cantidadInput.disabled = !checkbox.checked;
                if (!checkbox.checked) {
                    cantidadInput.classList.remove('is-invalid');
                    cantidadInput.value = '';
                    cantidadInput.parentElement.querySelector('.cantidad-feedback').textContent = "";
                } else {
                    cantidadInput.value = 1;
                    cantidadInput.dispatchEvent(new Event('input'));
                }
            });
        });

        // Feedback visual para cantidad solo si el checkbox está marcado
        document.querySelectorAll('.cantidad-input').forEach(function (input) {
            input.addEventListener('input', function () {
                const row = this.closest('.row');
                const checkbox = row.querySelector('.producto-checkbox');
                const stock = parseInt(this.getAttribute('data-stock'));
                let valor = parseInt(this.value);
                const feedback = this.parentElement.querySelector('.cantidad-feedback');

                if (!checkbox.checked) {
                    this.classList.remove('is-invalid');
                    feedback.textContent = "";
                    return;
                }

                if (valor > stock) {
                    this.classList.add('is-invalid');
                    feedback.textContent = "No puede ingresar una cantidad mayor al stock disponible (" + stock + ").";
                } else if (valor < 1 || isNaN(valor)) {
                    this.classList.add('is-invalid');
                    feedback.textContent = "La cantidad debe ser al menos 1.";
                } else {
                    this.classList.remove('is-invalid');
                    feedback.textContent = "";
                }
            });
        });

        // Validación al enviar el formulario
        document.getElementById('ventaForm').addEventListener('submit', function (e) {
            const seleccionados = document.querySelectorAll('input[name="productoIds"]:checked');
            if (seleccionados.length === 0) {
                e.preventDefault();
                alert("Debe seleccionar al menos un producto.");
                return;
            }
            let valid = true;
            seleccionados.forEach(function (checkbox) {
                const cantidadInput = checkbox.closest('.row').querySelector('.cantidad-input');
                const stock = parseInt(cantidadInput.getAttribute('data-stock'));
                const valor = parseInt(cantidadInput.value);
                const feedback = cantidadInput.parentElement.querySelector('.cantidad-feedback');
                if (!valor || valor < 1 || valor > stock) {
                    cantidadInput.classList.add('is-invalid');
                    feedback.textContent = "La cantidad ingresada no puede ser menor a 1 ni mayor al stock disponible.";
                    valid = false;
                }
            });
            if (!valid) {
                e.preventDefault();
            }
        });
    </script>
}